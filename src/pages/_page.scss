@import "../base";
@import "../scss/functions";
@import "../scss/mixins/alarm_level";

// Override default CSS
table {
  font-size: .8rem;
  td, th {
    vertical-align: middle !important;
  }
  &.table-sm .btn-sm {
    padding: .1rem .5rem;
  }
  &.table-flush {
    //margin: 0;
    th {
      border-top: 0;
    }
  }
}

.modal button.close:focus {
  outline: none;
}

.modal-header b {
  color: $title-bg;
  font-size: 1.2rem;
}

.nav-tabs {
  .nav-link {
    border-top-width: 3px;

    @include hover-focus {
      border-top-color: transparentize($primary, .75);
      @each $state, $color in $theme-colors {
        @include lr-state($state, border-top-color, transparentize($color, .75));
      }
    }

    &.disabled {
      border-top-color: transparent !important;
    }
  }

  .nav-link.active,
  .nav-item.show .nav-link {
    border-top-color: $primary;
    @each $state, $color in $theme-colors {
      @include lr-state($state, border-top-color, $color);
    }
  }
}

#page-title b {
  color: $title-bg;
  font-size: 1.2rem;
  padding-top: $nav-link-padding-y - .2rem;
  padding-bottom: $nav-link-padding-y - .2rem;
  padding-left: $card-spacer-x / 2;
  height: 36px;
}

#page-subtitle {
  margin-left: -1.5rem;
}

// React bootstrap date range picker
.rdt {
  input[type="text"].form-control {
    @extend .form-control-sm;
  }

  .rdtPicker {
    width: 14rem;
    @include reset-text();
    font-size: $popover-font-size;
    background-color: $popover-bg;
    background-clip: padding-box;
    border: $popover-border-width solid $popover-border-color;
    @include border-radius($popover-border-radius);
    @include box-shadow($popover-box-shadow);

    td, th {
      font-size: .75rem;
      height: unset;
      padding: 3px 0;
    }

    .rdtPrev span, .rdtNext span {
      margin-top: -.25rem;
    }

    td.rdtDay,
    td.rdtHour,
    td.rdtMinute,
    td.rdtSecond,
    .rdtTimeToggle,
    thead tr:first-child th {
      &:hover {
        background-color: $pagination-hover-bg;
      }
    }

    td.rdtActive {
      &, &:hover {
        background-color: $primary;
      }
    }

    td.rdtToday:before {
      border-bottom: 7px solid $primary;
    }
  }
}

.react-bootstrap-daterangepicker-container {
  width: 100%;
}

.badge.perm {
  @extend .bg-white;
  cursor: default;
  border: 1px solid;
  &.badge-danger {
    @extend .text-danger;
    border-color: $danger;
  }
  &.badge-dark {
    @extend .text-dark;
    border-color: $dark;
  }
}

// Common
.container-header {
  background-color: $body-bg;

  .lr-alarm-panel {
    margin-right: -.625rem;
    margin-top: 3px;

    & > .card {
      position: relative;
      margin-left: .5rem;
      margin-right: .5rem;

      &:first-child:before {
        border-top-left-radius: 2px;
      }

      &:before {
        content: '';
        position: absolute;
        bottom: -2px;
        left: -.5rem;
        right: -.5rem;
        height: 2px;
      }

      @each $state, $color in $theme-colors {
        @include lr-state($state, color, $color) {
          &:before {
            background-color: $color;
          }
        }
      }
    }
  }
}

// Widget
.dashboard-widget.card {
  $widget-width: 310px;
  $widget-body-height: 330px;

  min-width: $widget-width;
  max-width: $widget-width;
  margin-bottom: $card-deck-margin;

  &.widget-2x {
    min-width: ($widget-width + $card-deck-margin) * 2;
  }

  .card-header {
    padding: .25rem .75rem;

    .nav-item .btn {
      padding: 0;
      line-height: 1;
      vertical-align: baseline;
    }
  }

  .card-body {
    height: $widget-body-height;
    padding: $card-spacer-y .75rem;
    overflow-y: auto;
  }
}

// Agent
.card.lr-agent-card {
  min-width: 18rem !important;
  max-width: 18rem !important;
  margin-bottom: 1rem !important;
  border-top-width: 3px;
  border-top-style: solid;
  .card-header {
    @extend .py-1;
    @extend .px-2;
  }
  .card-body {
    @extend .p-0;
    font-size: .8rem;
    .media-body {
      table {
        @extend .m-0;
        table-layout: fixed;
        td {
          @extend .border-0;
          @extend .py-0;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
      }
    }
    p {
      @extend .m-0;
    }
  }

  @each $color, $value in $theme-colors {
    @include card-state($color, border-top-color, theme-color($color));
  }

  .card-body {
    @extend .p-0;
  }
}

.agent-content {
  @extend .d-flex;
  flex-direction: column;

  .main-content {
    flex-grow: 1;
    margin-right: $card-spacer-x;
  }

  .side-content {
    width: 140px;
    @extend .flex-shrink-0;
  }

  .timeline-menu {
    $timeline-color: $gray-400;
    $circle-radius: 5px;

    position: fixed;
    bottom: $card-spacer-y;
    height: 300px;
    font-size: .8rem;

    .timeline-bar {
      position: absolute;
      top: 0;
      left: $circle-radius;
      width: 0;
      height: 200px;
      border: 1px solid $timeline-color;

      .circle {
        position: absolute;
        left: -$circle-radius;
        width: 2 * $circle-radius;
        height: 2 * $circle-radius;
        border: 2px solid $timeline-color;
        border-radius: $circle-radius;
        &.start {
          top: -2 * $circle-radius;
        }
        &.end {
          bottom: -2 * $circle-radius;
        }
      }

    }

    .scroll-spy {
      margin-top: .5rem;
      dd {
        padding-left: 2rem;
        .anchor-to {
          cursor: pointer;
        }
        em.pointer {
          position: absolute;
          left: 1px;
          width: 2 * $circle-radius;
          height: 2 * $circle-radius;
          border: 2px solid #ffffff;
          border-radius: $circle-radius;
          background: $timeline-color;
          margin-top: $circle-radius;
        }
        &:hover {
          em.pointer {
            background: $primary;
          }
        }
        &.active {
          color: $primary;
          em.pointer {
            position: absolute;
            left: 1px;
            width: 2 * $circle-radius;
            height: 2 * $circle-radius;
            border: 0;
            border-top-left-radius: $circle-radius / 2;
            border-bottom-left-radius: $circle-radius / 2;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            background: $primary;
            margin-top: .5rem - px-to-rem(1px);
            &::after {
              content: "";
              border-right: 0;
              border-top: 5px solid transparent;
              border-bottom: 5px solid transparent;
              border-left: 5px solid $primary;
              width: 0;
              height: 0;
              display: inline-block;
              position: absolute;
              right: -5px;
            }
          }
        }
      }
    }
  }
}

// Alarm
.lr-alarm-table {
  font-size: .8rem;

  tr {
    th,
    td {
      &:first-child {
        border-left-width: 0;
        border-left-style: solid;
        border-left-color: transparent;
      }
    }

    //&:hover {
    //  @each $state, $color in $theme-colors {
    //    @include table-row-state($state, border-left-color, $color);
    //  }
    //}
  }
}

// Tab
.tab-container {
  position: relative;

  &.ignore-outside-card {
    .card-header-tabs {
      margin: 0;
      padding: 0 ($card-spacer-x / 2);
      //border-bottom: $card-border-width solid $card-border-color;
    }
  }

  .tab-content {
    border: $card-border-width solid $card-border-color;
    border-radius: $card-inner-border-radius;

    .tab-pane {
      padding: $card-spacer-y $card-spacer-x;
    }
  }
}