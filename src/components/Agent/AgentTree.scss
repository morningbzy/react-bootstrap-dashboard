@import "../../base";
@import "~bootstrap/scss/mixins/transition";
@import "~bootstrap/scss/mixins/hover";
@import "../../scss/functions";
@import "../../scss/mixins/alarm_level";

$agent-tree-width: $right-sidebar-width;

.agent-tree-wrapper {
  width: $agent-tree-width;
  padding: 15px;
  height: 100%;
  overflow-y: auto;
}

.agent-tree-nav {
  padding: 0;
  font-size: .9rem;

  ul, li {
    list-style-type: none;
    padding-left: 0;
  }

  $indent: 1em;
  $indicator-left: .3em;
  $indicator-leaf-left: .15em;
  $indicator-expended-left: 0;

  li {
    text-indent: $indent;
    line-height: 2em;

    li {
      text-indent: $indent * 2;
      > span:before {
        left: $indicator-left + $indent !important;
      }
      &.leaf > span:before {
        left: $indicator-leaf-left + $indent !important;
      }
      &.root > span:before,
      &.expended > span:before {
        left: $indicator-expended-left + $indent !important;
      }

      li {
        text-indent: $indent * 3;
        > span:before {
          left: $indicator-left + $indent * 2 !important;
        }
        &.leaf > span:before {
          left: $indicator-leaf-left + $indent * 2 !important;
        }
        &.root > span:before,
        &.expended > span:before {
          left: $indicator-expended-left + $indent * 2 !important;
        }

        li {
          text-indent: $indent * 4;
          > span:before {
            left: $indicator-left + $indent * 3 !important;
          }
          &.leaf > span:before {
            left: $indicator-leaf-left + $indent * 3 !important;
          }
          &.root > span:before,
          &.expended > span:before {
            left: $indicator-expended-left + $indent * 3 !important;
          }
        }
      }
    }
  }

  li {
    span,
    a {
      display: block;
      cursor: pointer;
      color: $dropdown-link-color;

      @each $state, $color in $theme-colors {
        @include lr-state($state) {
          .lr-icon {
            color: $color;
          }

          &:hover {
            .lr-icon {
              color: darken($color, 5%);
            }
          }
        }
      }
    }

    &:not(.root):not(.leaf) {
      > span,
      > a {
        cursor: pointer;

        @include hover-focus-active {
          background-color: $gray-200;
          color: $dropdown-link-hover-color;
        }
      }
    }
  }

  li {
    position: relative;
    > span:before {
      content: '';
      position: absolute;
      top: 1em - .3em;
      left: $indicator-left;
      height: .6em;
      width: .6em;
      cursor: pointer;
      border-top: .3em solid transparent;
      border-bottom: .3em solid transparent;
      border-left: .3em solid gray;
      border-right: 0;
    }
    &.leaf > span:before {
      left: $indicator-leaf-left;
      top: 1em - .15em;
      height: .4em;
      width: .4em;
      border: 2px solid gray;
      border-radius: .2em;
    }
    &.root > span:before,
    &.expended > span:before {
      top: 1em - .15em;
      left: $indicator-expended-left;
      border-top: .3em solid gray;
      border-bottom: 0;
      border-left: .3em solid transparent;
      border-right: .3em solid transparent;
    }
  }
}